@using MudBlazor.Interop
@inject IJSRuntime JS
@inherits Panel16.Pages.Components.RangedComponent

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg @onmousemove="args => onmousemove(args)" @onmouseout="mouseout"
   viewBox="0 0 103 236"
   version="1.1"
   id="@lever_id"
   sodipodi:docname="handler2.svg"
   inkscape:version="1.2.1 (9c6d41e410, 2022-07-14)"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
   <sodipodi:namedview
      id="namedview7"
      pagecolor="#ffffff"
      bordercolor="#000000"
      borderopacity="0.25"
      inkscape:showpageshadow="2"
      inkscape:pageopacity="0.0"
      inkscape:pagecheckerboard="0"
      inkscape:deskcolor="#d1d1d1"
      inkscape:document-units="mm"
      showgrid="false"
      showguides="true"
      inkscape:zoom="4.051698"
      inkscape:cx="68.983424"
      inkscape:cy="38.502376"
      inkscape:window-width="1920"
      inkscape:window-height="1017"
      inkscape:window-x="-8"
      inkscape:window-y="-8"
      inkscape:window-maximized="1"
      inkscape:current-layer="lever" />
   <defs
      id="defs2">
      <inkscape:path-effect
         effect="bspline"
         id="path-effect2942"
         is_visible="true"
         lpeversion="1"
         weight="33.333333"
         steps="2"
         helper_size="0"
         apply_no_weight="true"
         apply_with_weight="true"
         only_selected="false" />
   </defs>
   <g
      inkscape:label="Layer 1"
      inkscape:groupmode="layer"
      id="layer1">
      <rect
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.228577;stroke-linecap:round"
         id="rect184"
         width="24.664228"
         height="169.35843"
         x="14.252746"
         y="33.331669"
         rx="6"
         ry="6" />
      <g
         id="g8886"
         transform="matrix(0.89088823,0,0,1.4322557,-14.696628,6.7460844)">
         <rect
            style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.657077;stroke-linecap:round"
            id="rect8870"
            width="9.1564054"
            height="97.344017"
            x="42.058929"
            y="23.786066" />
         <path
            sodipodi:type="star"
            style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.265999;stroke-linecap:round"
            id="path9666"
            inkscape:flatsided="true"
            sodipodi:sides="3"
            sodipodi:cx="117.47015"
            sodipodi:cy="33.615673"
            sodipodi:r1="24.972296"
            sodipodi:r2="12.486148"
            sodipodi:arg1="0.52359878"
            sodipodi:arg2="1.5707963"
            inkscape:rounded="0"
            inkscape:randomized="0"
            d="m 139.0968,46.101821 -43.253289,0 21.626639,-37.4584437 z"
            inkscape:transform-center-y="1.6595492"
            transform="matrix(-0.39668781,0,0,-0.26582269,93.622894,133.33597)" />
      </g>
      <g
         id="g9094">
         <rect
            style="fill:#999999;fill-opacity:0;stroke:#8a8a8a;stroke-width:1.03156;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
            id="rect9541"
            width="96.724007"
            height="182.78542"
            x="2.8086607"
            y="27.350546"
            rx="5.4712582"
            ry="8.3866625" />
         <g
            id="top_textbox"
            transform="matrix(1.3576218,0,0,1.1979446,-95.17543,0.29034022)">
            <rect
               style="fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.205519;stroke-linecap:round"
               id="rect9308"
               width="73.910538"
               height="17.239685"
               x="71.032875"
               y="1.9380975" />
            <text
               xml:space="preserve"
               style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:7.3712px;font-family:Arial;-inkscape-font-specification:'Arial Bold';direction:rtl;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.231583;stroke-linecap:round"
               x="145.03641"
               y="11.054486"
               id="text9424"
               transform="scale(0.87061404,1.1486146)"><tspan
                                                          sodipodi:role="line"
                                                          id="tspan9422"
                                                          style="font-size:7.3712px;stroke-width:0.231583"
                                                          x="145.03641"
                                                          y="11.054486">@TopBoxText</tspan></text>
         </g>
         <g
            id="down_textbox"
            transform="matrix(1.3576218,0,0,1.1979446,-95.341919,210.96496)">
            <rect
               style="fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.205519;stroke-linecap:round"
               id="rect9481"
               width="73.910538"
               height="17.239685"
               x="71.032875"
               y="1.9380975" />
            <text
               xml:space="preserve"
               style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:7.3712px;font-family:Arial;-inkscape-font-specification:'Arial Bold';direction:rtl;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.231583;stroke-linecap:round"
               x="145.03641"
               y="11.054486"
               id="text9485"
               transform="scale(0.87061404,1.1486146)"><tspan
                                                          sodipodi:role="line"
                                                          id="tspan9483"
                                                          style="font-size:7.3712px;stroke-width:0.231583"
                                                          x="145.03641"
                                                          y="11.054486">@ButtomBoxText</tspan></text>
         </g>
         <text
            xml:space="preserve"
            style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:8.46667px;font-family:Arial;-inkscape-font-specification:'Arial Bold';direction:rtl;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.066;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
            x="22.773178"
            y="54.853542"
            id="text9726"><tspan
                             sodipodi:role="line"
                             id="tspan9724"
                             style="stroke-width:1.066"
                             x="22.773178"
                             y="54.853542" /></text>
      </g>
      <g
         id="lever">
         <path
            style="fill:#000000;stroke-width:0.943704;stroke-linecap:round;stroke:#919191;stroke-opacity:1"
            d="M 101.42914,23.786066 V 131.03836"
            id="@path_id"
            transform="matrix(0.89088823,0,0,1.4322557,-14.696628,6.7460844)" />
         <rect  @onmousedown="e => mousedoen(e)" @onmouseup="e => mouseup(e)"
            style="fill:#919191;fill-opacity:1;stroke:#000000;stroke-width:0.466039;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
            id="lever_handel"
            width="23.508621"
            height="5.7475042"
            x="63.9105"
            y="@y"
            rx="0.99999839"
            ry="1.0001642" />
      </g>
   </g>
</svg>

 <style> 
    #lever_handel{ 
        cursor: pointer; 
    } 
 </style>

@code {
    [Parameter]
    public string TopBoxText { set; get; } = "";
    [Parameter] 
    public string ButtomBoxText { get; set; } = "";
   
   bool handler_on_hold = false;
   string path_id = Guid.NewGuid().ToString("N");
   string lever_id = Guid.NewGuid().ToString("N");


   double start_range = 40;
   double end_range = 190;
   public double y => start_range + (end_range - start_range) * Value;

   private async Task onmousemove(MouseEventArgs args)
   {
      if (handler_on_hold)
      {
         var result = await JS.InvokeAsync<BoundingClientRect>("methods.GetRect",path_id );

         Value = Math.Min(Math.Max(args.ClientY - result.Y , 0 ) , result.Height) / result.Height ;
         //ValueChanged?.InvokeAsync();
         //OnValueSet?.Invoke(Value);
      }
   }

   private void mouseup(MouseEventArgs mouseEventArgs)
   {
      handler_on_hold = false;
   }

   private void mousedoen(MouseEventArgs mouseEventArgs)
   {
      handler_on_hold = true;
   }

   private async Task mouseout(MouseEventArgs args)
   {
      var layer_1_bounds = await JS.InvokeAsync<BoundingClientRect>("methods.GetRect",lever_id );
      if (args.ClientY < layer_1_bounds.Top || args.ClientY > layer_1_bounds.Bottom || 
          args.ClientX > layer_1_bounds.Right || args.ClientX < layer_1_bounds.Left)
      {
         handler_on_hold = false;
      }
   }

}
