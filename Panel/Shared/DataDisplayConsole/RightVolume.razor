@using MudBlazor.Interop
@inject IJSRuntime JS
@inherits Panel16.Pages.Components.VolumeComponent
<g
    class="roller"
    @onmouseout="e => mouseout(e)" @onmousemove="e => mousemove(e)"
    id="@layer_id"
    transform="translate(-41.765712,-84.123909)">
    <circle
        style="fill:#666666;stroke-width:1.866;stroke-linecap:round"
        id="path428-5"
        cx="323.08899"
        cy="136.40614"
        r="28.471601"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 349.49407,136.4694 -2.81598,-0.0645 z"
        id="path1725-6"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 296.38266,135.86695 2.8155,0.082 z"
        id="path1166-2"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 308.48116,114.16518 1.63187,2.29583 z"
        id="path1723-9"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 337.3953,114.16518 -1.63186,2.29583 z"
        id="path1727-1"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 337.3953,158.29294 -1.63186,-2.29583 z"
        id="path1735-2"/>
    <path
        style="fill:none;fill-opacity:1;stroke:#dfdfdf;stroke-width:0.566;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
        d="m 308.48116,158.29294 1.63187,-2.29583 z"
        id="path1733-7"/>
    <circle
        style="fill:#808080;stroke-width:1.90881;stroke-linecap:round"
        id="path482-0"
        cx="323.08899"
        cy="136.40614"
        r="24.448782"/>
    <g
        @onmousedown="e => mousedown(e)" @onmouseup="e => mouseup(e)"
        id="roller-9"
        transform="translate(243.68195,52.819781) rotate(@angle 80 84)">
        <circle
            style="fill:#cccccc;stroke-width:2.47682;stroke-linecap:round"
            id="path694-3"
            cx="79.407036"
            cy="83.586357"
            r="22.404911"/>
        <circle
            style="fill:#f2f2f2;stroke:#949494;stroke-width:0.2;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
            id="path802-6"
            cx="68.690781"
            cy="98.72963"
            r="2.3508661"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect856-0"
            width="4.5419536"
            height="1.397526"
            x="-25.884954"
            y="89.455841"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(-55.279964)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1100-6"
            width="4.5419536"
            height="1.397526"
            x="-84.547783"
            y="57.51503"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(-89.160541)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1102-2"
            width="4.5419536"
            height="1.397526"
            x="41.210144"
            y="83.301208"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(-21.199839)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1104-6"
            width="4.5419536"
            height="1.397526"
            x="-109.36761"
            y="-67.62458"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(-156.02875)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1112-1"
            width="4.5419536"
            height="1.397526"
            x="-116.44756"
            y="-41.006184"
            rx="0.26751241"
            ry="0.26751241"
            transform="matrix(-0.56956699,-0.82194492,-0.82194492,0.56956699,0,0)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1114-8"
            width="4.5419536"
            height="1.397526"
            x="-84.602623"
            y="-103.92548"
            rx="0.26751241"
            ry="0.26751241"
            transform="matrix(0.01287384,-0.99991713,-0.99991713,-0.01287384,0,0)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1116-7"
            width="4.5419536"
            height="1.397526"
            x="-106.90338"
            y="25.992323"
            rx="0.26751241"
            ry="0.26751241"
            transform="matrix(-0.93232482,-0.36162195,-0.36162195,0.93232482,0,0)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1136-9"
            width="4.5419536"
            height="1.397526"
            x="21.127775"
            y="-136.33899"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(124.72004)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1140-2"
            width="4.5419536"
            height="1.397526"
            x="-46.375961"
            y="-130.05818"
            rx="0.26751241"
            ry="0.26751241"
            transform="rotate(158.80016)"/>
        <rect
            style="fill:#cccccc;fill-opacity:1;stroke-width:0.998356;stroke-linecap:round"
            id="rect1124-0"
            width="4.5419536"
            height="1.397526"
            x="111.69037"
            y="-5.8770294"
            rx="0.26751241"
            ry="0.26751241"
            transform="matrix(0.56956698,0.82194493,0.82194493,-0.56956698,0,0)"/>
    </g>
</g>


<style>
    .no-drag{
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
    }

    .button_box button{
    font-size: 4rem;
    }
    .button_box input{
    margin-left: 0.7rem;
    }
    #roller{
        cursor: pointer;
    }
    
</style>
       
         
@code{

    [Parameter]
    public string VolumeText { get; set; } = "";
 
    private string layer_id = Guid.NewGuid().ToString("N");

    private int min_valur = 0;
    private int max_value = 290;
    private int angle => (int) ((max_value - min_valur) * Value + min_valur);
    private bool is_on_hold = false;

    private async Task mouseout(MouseEventArgs args)
    {
        var layer_1_bounds = await JS.InvokeAsync<BoundingClientRect>("methods.GetRect",layer_id );
        if (args.ClientY < layer_1_bounds.Top || args.ClientY > layer_1_bounds.Bottom || 
            args.ClientX > layer_1_bounds.Right || args.ClientX < layer_1_bounds.Left)
        {
            is_on_hold = false;
        }
    }

    private void mousedown(MouseEventArgs mouseEventArgs)
    {
        is_on_hold = true;
    }

    private void mouseup(MouseEventArgs mouseEventArgs)
    {
        is_on_hold = false;
    }

    private async Task mousemove(MouseEventArgs args)
    {
        if (is_on_hold)
        {
            /*Shape definition
             these should be calculated properly 
             ** don't change if you don't know the logic
             */
            
            var start_angle = 120d;
            var end_angle = 60d;
            
            // do the calculations here ! ARC tan!! Math.ta
            var bounds = await JS.InvokeAsync<BoundingClientRect>("methods.GetRect",layer_id );
            var abs_y = args.ClientY - bounds.Y - bounds.Height / 2; 
            var abs_x = args.ClientX - bounds.X - bounds.Width / 2;
            var rads =Math.Atan2(abs_y, abs_x);
            var degree = rads / Math.PI * 180;

            switch (degree)
            {
                case >= 90 and <= 180:
                    degree = Math.Max(degree, start_angle);
                    degree -= 120;
                    break;
                case >= 0 and <= 90:
                    degree = Math.Min(degree, end_angle);
                    degree += 230;
                    break;
                case >= -180 and <= -90:
                    degree += 180; // invert
                    degree += 60;
                    break;
                case >= -90 and <= 0:
                    degree += 90; // start 0 to 90
                    degree += 140;
                    break;
            }

            Value = degree / 290;
            //ValueChanged.InvokeAsync();
            //OnValueSet.Invoke(Value);
        }
    }

}